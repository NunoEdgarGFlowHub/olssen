{"name":"Olssen","tagline":"OnLine Spectral Search ENgine using Apache Spark, Python/Flask, and AngularJS","body":"# Olssen \r\n### an OnLine Spectral Search ENgine  \r\n\r\nOur engine provides a [RESTful-like API](https://github.com/olssen/olssen-ws) to perform **on-line spectral search** for proteomics\r\nspectral data. It is based on the [SpectraST](http://tools.proteomecenter.org/wiki/index.php?title=Software:SpectraST) \r\nalgorithm for spectral search and uses [PRIDE Cluster spectral libraries](http://wwwdev.ebi.ac.uk/pride/cluster/#/libraries).  \r\n\r\n## Components  \r\n\r\n#### [Olssen Web Service](https://github.com/jadianes/olssen-ws)  \r\n\r\nThe [server](https://github.com/olssen/olssen-ws) is buit for scalability and performance working with big datasets. It uses \r\n[Flask](http://flask.pocoo.org/) on top of [CherryPy's server](http://www.cherrypy.org/) \r\nand performs its spectral searches using an engine based on [Apache Spark](https://spark.apache.org/) \r\nclusters.  \r\n\r\n#### [Olssen GUI](https://github.com/jadianes/olssen-gui)  \r\n\r\nThe client [Web Application](https://github.com/olssen/olssen-gui) can be used on top of the web service and is ideal for data visualisation and individual spectral search.  \r\n\r\nThis GUI AngularJS project is generated with [yo angular generator](https://github.com/yeoman/generator-angular)\r\nversion 0.12.0.\r\n\r\n## Concepts  \r\n\r\nThese are some IPython/Jupyter notebooks to explore different spectral search concepts and\r\nprocedures used in our on-line search server.  \r\n\r\n#### [Loading a PRIDE Cluster library into a Spark RDD](notebooks/read-spectrum-lib.ipynb)  \r\n\r\n#### [The SpectraST algorithm for spectral search](notebooks/spectraST.ipynb)  ","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}